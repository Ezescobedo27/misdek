<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>